{"ast":null,"code":"var _jsxFileName = \"/Users/srcho/development/nuri/frontend/src/components/PaperList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Typography, Paper, List, ListItem, ListItemText, Link, Box, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PaperList = ({\n  papers,\n  gptAnswer\n}) => {\n  _s();\n  const [expandedAbstracts, setExpandedAbstracts] = useState({});\n  const toggleAbstract = index => {\n    setExpandedAbstracts(prev => ({\n      ...prev,\n      [index]: !prev[index]\n    }));\n  };\n\n  // GPT의 답변이 \"nodata\"인 경우\n  if (gptAnswer.includes(\"nodata\")) {\n    return /*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 논문 리스트가 비어있는 경우\n  if (!papers || papers.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 실제로 사용된 논문만 필터링\n  const usedPapers = papers.filter(paper => gptAnswer.includes(`[${paper.id}]`));\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 2,\n      borderRadius: '16px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          color: 'primary.main'\n        },\n        children: \"\\uB17C\\uBB38 \\uCD9C\\uCC98\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), usedPapers.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n      children: usedPapers.map(paper => /*#__PURE__*/_jsxDEV(ListItem, {\n        alignItems: \"flex-start\",\n        sx: {\n          px: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            color: \"primary\",\n            children: [\"[\", paper.id, \"] \", paper.title || \"제목 없음\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 19\n          }, this),\n          secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              component: \"span\",\n              variant: \"body2\",\n              color: \"text.primary\",\n              children: [\"\\uC800\\uC790: \", paper.authors || \"정보 없음\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                sx: {\n                  display: '-webkit-box',\n                  WebkitLineClamp: expandedAbstracts[paper.id] ? 'unset' : 4,\n                  WebkitBoxOrient: 'vertical',\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis'\n                },\n                children: paper.abstract || \"초록 정보 없음\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 23\n              }, this), paper.abstract && /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => toggleAbstract(paper.id),\n                sx: {\n                  mt: 1,\n                  p: 0,\n                  minWidth: 'unset'\n                },\n                children: expandedAbstracts[paper.id] ? '접기' : '더보기'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              fontWeight: \"bold\",\n              color: \"text.secondary\",\n              sx: {\n                mt: 1\n              },\n              children: [\"\\uC720\\uC0AC\\uB3C4: \", paper.similarity != null ? `${(paper.similarity * 100).toFixed(2)}%` : '정보 없음']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)\n      }, paper.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"\\uC9C8\\uBB38\\uACFC \\uC720\\uC0AC\\uD55C \\uB17C\\uBB38\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(PaperList, \"hAYbGvKsFZcQAooYrbyVxpetNc8=\");\n_c = PaperList;\nexport default PaperList;\nvar _c;\n$RefreshReg$(_c, \"PaperList\");","map":{"version":3,"names":["React","useState","Typography","Paper","List","ListItem","ListItemText","Link","Box","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","PaperList","papers","gptAnswer","_s","expandedAbstracts","setExpandedAbstracts","toggleAbstract","index","prev","includes","fileName","_jsxFileName","lineNumber","columnNumber","length","usedPapers","filter","paper","id","elevation","sx","p","borderRadius","children","display","justifyContent","alignItems","mb","variant","color","map","px","primary","title","secondary","component","authors","mt","WebkitLineClamp","WebkitBoxOrient","overflow","textOverflow","abstract","onClick","minWidth","fontWeight","similarity","toFixed","_c","$RefreshReg$"],"sources":["/Users/srcho/development/nuri/frontend/src/components/PaperList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Typography, Paper, List, ListItem, ListItemText, Link, Box, Button } from '@mui/material';\n\nconst PaperList = ({ papers, gptAnswer }) => {\n  const [expandedAbstracts, setExpandedAbstracts] = useState({});\n\n  const toggleAbstract = (index) => {\n    setExpandedAbstracts(prev => ({\n      ...prev,\n      [index]: !prev[index]\n    }));\n  };\n\n  // GPT의 답변이 \"nodata\"인 경우\n  if (gptAnswer.includes(\"nodata\")) {\n    return <Typography></Typography>;\n  }\n\n  // 논문 리스트가 비어있는 경우\n  if (!papers || papers.length === 0) {\n    return <Typography></Typography>;\n  }\n\n  // 실제로 사용된 논문만 필터링\n  const usedPapers = papers.filter(paper => gptAnswer.includes(`[${paper.id}]`));\n\n  return (\n    <Paper elevation={3} sx={{ p: 2, borderRadius: '16px' }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n        <Typography variant=\"h6\" sx={{ color: 'primary.main' }}>논문 출처</Typography>\n      </Box>\n      {usedPapers.length > 0 ? (\n        <List>\n          {usedPapers.map((paper) => (\n            <ListItem key={paper.id} alignItems=\"flex-start\" sx={{ px: 0 }}>\n              <ListItemText\n                primary={\n                  <Typography variant=\"subtitle1\" color=\"primary\">\n                    [{paper.id}] {paper.title || \"제목 없음\"}\n                  </Typography>\n                }\n                secondary={\n                  <>\n                    <Typography component=\"span\" variant=\"body2\" color=\"text.primary\">\n                      저자: {paper.authors || \"정보 없음\"}\n                    </Typography>\n                    <Box sx={{ mt: 1 }}>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"text.secondary\"\n                        sx={{\n                          display: '-webkit-box',\n                          WebkitLineClamp: expandedAbstracts[paper.id] ? 'unset' : 4,\n                          WebkitBoxOrient: 'vertical',\n                          overflow: 'hidden',\n                          textOverflow: 'ellipsis',\n                        }}\n                      >\n                        {paper.abstract || \"초록 정보 없음\"}\n                      </Typography>\n                      {paper.abstract && (\n                        <Button \n                          onClick={() => toggleAbstract(paper.id)} \n                          sx={{ mt: 1, p: 0, minWidth: 'unset' }}\n                        >\n                          {expandedAbstracts[paper.id] ? '접기' : '더보기'}\n                        </Button>\n                      )}\n                    </Box>\n                    <Typography variant=\"body2\" fontWeight=\"bold\" color=\"text.secondary\" sx={{ mt: 1 }}>\n                      유사도: {paper.similarity != null ? `${(paper.similarity * 100).toFixed(2)}%` : '정보 없음'}\n                    </Typography>\n                  </>\n                }\n              />\n            </ListItem>\n          ))}\n        </List>\n      ) : (\n        <Typography>질문과 유사한 논문이 없습니다.</Typography>\n      )}\n    </Paper>\n  );\n}\n\nexport default PaperList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}